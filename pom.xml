<!--

    #-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=#
      This file is part of the Smart Developer Hub Project:
        http://www.smartdeveloperhub.org/

      Center for Open Middleware
        http://www.centeropenmiddleware.com/
    #-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=#
      Copyright (C) 2015-2016 Center for Open Middleware.
    #-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=#
      Licensed under the Apache License, Version 2.0 (the "License");
      you may not use this file except in compliance with the License.
      You may obtain a copy of the License at

                http://www.apache.org/licenses/LICENSE-2.0

      Unless required by applicable law or agreed to in writing, software
      distributed under the License is distributed on an "AS IS" BASIS,
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      See the License for the specific language governing permissions and
      limitations under the License.
    #-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=#
      Artifact    : org.smartdeveloperhub.curator:sdh-curator-connector:0.2.0-SNAPSHOT
      Bundle      : sdh-curator-connector-0.2.0-SNAPSHOT.jar
    #-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=#

-->
<project
	xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<!-- =================================================================== -->
	<!--   MODULE COORDINATES                                                -->
	<!-- =================================================================== -->

	<parent>
		<groupId>org.smartdeveloperhub</groupId>
		<artifactId>sdh-build</artifactId>
		<version>0.3.0</version>
	</parent>

	<groupId>org.smartdeveloperhub.curator</groupId>
	<version>0.2.0-SNAPSHOT</version>
	<artifactId>sdh-curator-connector</artifactId>

	<packaging>jar</packaging>

	<!-- =================================================================== -->
	<!--   MODULE INFORMATION                                                -->
	<!-- =================================================================== -->

	<name>SDH :: Curator Connector</name>

	<description>A connector for the Smart Developer Hub project Curator</description>

	<url>http://www.smartdeveloperhub.org/</url>

	<!-- The development team -->

	<developers>
		<developer>
			<id>mestebangutierrez</id>
			<name>Miguel Esteban Guti√©rrez</name>
			<email>m.esteban.gutierrez@gmail.com</email>
			<roles>
				<role>architect</role>
				<role>developer</role>
				<role>product owner</role>
			</roles>
			<timezone>+1</timezone>
		</developer>
	</developers>

	<!-- =================================================================== -->
	<!--   BUILD SETTINGS                                                    -->
	<!-- =================================================================== -->

	<properties>
		<jena.version>2.13.0</jena.version>
		<rabbitmq.version>3.5.5</rabbitmq.version>
		<ldp4j.version>0.2.1</ldp4j.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.apache.jena</groupId>
				<artifactId>jena-core</artifactId>
				<version>${jena.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.jena</groupId>
				<artifactId>jena-arq</artifactId>
				<version>${jena.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<scope>provided</scope>
		</dependency>

		<!--
			If partially shading Apache Jena, Xerces must be provided to prevent
			linkage failures, as Xerces/XML Apis are usually endorsed by containers
		-->
		<!--
		<dependency>
			<groupId>xerces</groupId>
			<artifactId>xercesImpl</artifactId>
			<version>2.11.0</version>
			<scope>provided</scope>
		</dependency>
		 -->

		<dependency>
			<groupId>com.rabbitmq</groupId>
			<artifactId>amqp-client</artifactId>
			<version>${rabbitmq.version}</version>
			<!-- optional>true</optional -->
		</dependency>

		<dependency>
			<groupId>org.apache.jena</groupId>
			<artifactId>jena-core</artifactId>
			<exclusions>
				<exclusion>
					<groupId>log4j</groupId>
					<artifactId>log4j</artifactId>
				</exclusion>
			</exclusions>
			<!-- optional>true</optional -->
		</dependency>

		<dependency>
			<groupId>org.apache.jena</groupId>
			<artifactId>jena-arq</artifactId>
			<exclusions>
				<exclusion>
					<groupId>log4j</groupId>
					<artifactId>log4j</artifactId>
				</exclusion>
				<exclusion>
					<artifactId>httpclient</artifactId>
					<groupId>org.apache.httpcomponents</groupId>
				</exclusion>
				<exclusion>
					<artifactId>httpclient-cache</artifactId>
					<groupId>org.apache.httpcomponents</groupId>
				</exclusion>
				<exclusion>
					<artifactId>jsonld-java</artifactId>
					<groupId>com.github.jsonld-java</groupId>
				</exclusion>
				<exclusion>
					<artifactId>commons-csv</artifactId>
					<groupId>org.apache.commons</groupId>
				</exclusion>
				<exclusion>
					<artifactId>libthrift</artifactId>
					<groupId>org.apache.thrift</groupId>
				</exclusion>
				<exclusion>
					<artifactId>jcl-over-slf4j</artifactId>
					<groupId>org.slf4j</groupId>
				</exclusion>
			</exclusions>
			<!-- optional>true</optional -->
		</dependency>

		<!-- Default unit testing frameworks-->
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-integration</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Default mocking frameworks -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jmockit</groupId>
			<artifactId>jmockit</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.ldp4j.commons</groupId>
			<artifactId>ldp4j-commons-testing</artifactId>
			<version>${ldp4j.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- Other runtime dependencies required for testing -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<!--
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>2.4.2</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<minimizeJar>true</minimizeJar>
							<shadedArtifactAttached>true</shadedArtifactAttached>
							<artifactSet>
								<includes>
									<include>com.rabbitmq:amqp-client:jar:</include>
									<include>org.apache.jena:jena-core:jar:</include>
									<include>org.apache.jena:jena-arq:jar:</include>
									<include>org.apache.jena:jena-iri:jar:</include>
									<include>org.apache.commons:commons-lang3:jar:</include>
								</includes>
							</artifactSet>
							<relocations>
								<relocation>
									<pattern>com.rabbitmq</pattern>
									<shadedPattern>org.smartdeveloperhub.curator.shaded.com.rabbitmq</shadedPattern>
								</relocation>
								<relocation>
									<pattern>com.hp.hpl.jena</pattern>
									<shadedPattern>org.smartdeveloperhub.curator.shaded.com.hp.hpl.jena</shadedPattern>
								</relocation>
								<relocation>
									<pattern>jena</pattern>
									<shadedPattern>org.smartdeveloperhub.curator.shaded.jena</shadedPattern>
								</relocation>
								<relocation>
									<pattern>org.apache.jena</pattern>
									<shadedPattern>org.smartdeveloperhub.curator.shaded.org.apache.jena</shadedPattern>
								</relocation>
								<relocation>
									<pattern>arq</pattern>
									<shadedPattern>org.smartdeveloperhub.curator.shaded.arq</shadedPattern>
								</relocation>
								<relocation>
									<pattern>riotcmd</pattern>
									<shadedPattern>org.smartdeveloperhub.curator.shaded.riotcmd</shadedPattern>
								</relocation>
								<relocation>
									<pattern>org.apache.commons.lang3</pattern>
									<shadedPattern>org.smartdeveloperhub.curator.shaded.org.apache.commons.lang3</shadedPattern>
								</relocation>
							</relocations>
							<transformers>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ApacheLicenseResourceTransformer" />
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ApacheNoticeResourceTransformer">
									<addHeader>false</addHeader>
								</transformer>
							</transformers>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	 -->

	<profiles>
		<profile>
			<id>clients</id>
			<properties>
				<skipTests>true</skipTests>
				<maven.javadoc.skip>true</maven.javadoc.skip>
				<testClassPath>no-classpath-available</testClassPath>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>prepare-dependencies</id>
								<phase>validate</phase>
								<goals>
									<goal>copy-dependencies</goal>
								</goals>
								<configuration>
									<scope>test</scope>
									<outputDirectory>${project.build.directory}${file.separator}dependencies${file.separator}</outputDirectory>
									<overWriteReleases>false</overWriteReleases>
									<overWriteSnapshots>false</overWriteSnapshots>
									<overWriteIfNewer>true</overWriteIfNewer>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.gmaven</groupId>
						<artifactId>groovy-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>prepare-classpath</id>
								<phase>validate</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								<configuration>
									<color>true</color>
									<source>
										def prop='testClassPath'
										def jars=new ArrayList&lt;String&gt;()
										jars.add(project.artifactId+'-'+project.version+'.jar')
										jars.add(project.artifactId+'-'+project.version+'-tests.jar')
										def rootDir = project.build.properties.get('directory')
										def dir = new File(rootDir, 'dependencies')
										dir.eachFileRecurse {
											file->
												if (file.isFile()) {
													if (file.name.endsWith('jar')) {
													jars.add('dependencies/'+file.name)
													}
												}
										}
										def testClassPath=''
										jars.each {
											file ->
												testClassPath+=file+' '+System.lineSeparator+' '
										}
										project.properties.setProperty(prop,testClassPath)
										println 'New test classpath ['+prop +']: ' + project.properties.getProperty(prop)
									</source>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<version>2.7</version>
						<executions>
							<execution>
								<id>copy-manifest</id>
								<phase>validate</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.directory}${file.separator}tmp${file.separator}</outputDirectory>
									<resources>
										<resource>
											<directory>${basedir}${file.separator}src${file.separator}test${file.separator}dist${file.separator}</directory>
											<filtering>true</filtering>
											<includes>
												<include>MANIFEST.mf</include>
											</includes>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jar-plugin</artifactId>
						<version>2.6</version>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<classifier>clients</classifier>
									<excludes>
										<exclude>**/*</exclude>
									</excludes>
									<archive>
										<manifestFile>${project.build.directory}${file.separator}tmp${file.separator}MANIFEST.mf</manifestFile>
										<manifest>
											<mainClass>org.smartdeveloperhub.curator.ExampleConnectorConsumer</mainClass>
										</manifest>
									</archive>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<!-- =================================================================== -->
	<!--   ENVIRONMENT SETTINGS                                              -->
	<!-- =================================================================== -->

	<issueManagement>
		<system>GitHub</system>
		<url>https://github.com/SmartDeveloperHub/sdh-curator-connector/issues</url>
	</issueManagement>

	<ciManagement>
		<system>Travis-CI</system>
		<url>https://travis-ci.org/SmartDeveloperHub/sdh-curator-connector</url>
	</ciManagement>

	<scm>
		<connection>scm:git:git://git@github.com:SmartDeveloperHub/sdh-curator-connector.git</connection>
		<developerConnection>scm:git:ssh://github.com/SmartDeveloperHub/sdh-curator-connector.git</developerConnection>
		<url>git://github.com/SmartDeveloperHub/sdh-curator-connector.git</url>
	</scm>

</project>